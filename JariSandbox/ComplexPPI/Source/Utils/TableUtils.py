import csv

decimals = 3

def getKeys(dicts):
    for dict in dicts:
        keys = set()
        for key in dict.keys():
            keys.add(key)
    keys = list(keys)
    keys.sort()
    keyDict = {}
    for key in keys:
        keyDict[key] = key
    return (keys, keyDict)
        
def writeCSV(dict, filename):
    if not isinstance(dict, list):
        dict = [dict]
    keys, keyDict = getKeys(dict)
    csvFile = open(filename, "wb")
    writer = csv.DictWriter(csvFile, fieldnames=keys)
    writer.writerow(keyDict)
    for row in dict:
        writer.writerow(row)
    csvFile.close()

def readCSV(filename):
    csvFile = open(filename, "rb")
    reader = csv.DictReader(csvFile)
    rows = []
    row = reader.next()
    while True:
        try:    
            rows.append(row)
            row = reader.next()
        except StopIteration:
            break
    csvFile.close()
    return rows

def interpret(data):
    try:
       floatValue = float(data)
       try:
           intValue = int(data)
           if floatValue != float(intValue):
               return floatValue
           else:
               return intValue
       except:
           return floatValue
    except:
       return data
    
def floatToString(data):
    if isinstance(data,float):
        return ("%."+str(decimals)+"f") % data
    else:
        return data

def getLatexString(data):
    data = interpret(data)
    data = floatToString(data)
    string = str(data)
    string = string.replace("_","\\_")
    return string

def writeLatex(dict, filename, keys = None, empty=" "):
    if not isinstance(dict, list):
        dict = [dict]
    if keys == None:
        keys = getKeys(dict)[0]
    
    file = open(filename, "wt")
    file.write("% This file is generated by JariSandbox/ComplexPPI/Source/Utils/TableUtils.py\n")
    file.write("% DO NOT edit manually, as your changes WILL BE OVERWRITTEN!\n")
    
    file.write("\\begin{tabular}{ | c | ")
    for key in keys:
        file.write(" c |")
    file.write( "}\n")
    file.write("\\hline\n")                       
    isFirst = True
    for key in keys:
        if isFirst:
            file.write(getLatexString(key))
            isFirst = False
        else:
            file.write(" & " + getLatexString(key))
    file.write(" \\\\\n")
    file.write("\\hline\n")                     
    for row in dict:
        isFirst = True
        for key in keys:
            if not isFirst:
                file.write(" & ")
            else:
                isFirst = False
            if row.has_key(key):
                file.write(getLatexString(row[key]))
            else:
                file.write(empty)
        file.write(" \\\\\n")
    #file.write("1 & 2 & 3 \\\\\n")
    #file.write("4 & 5 & 6 \\\\\n")
    #file.write("7 & 8 & 9 \\\\\n")
    file.write("\\hline\n")
    file.write("\\end{tabular}\n")
    file.close()
    